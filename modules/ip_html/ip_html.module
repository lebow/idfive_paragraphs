<?php

/**
 * @file
 * Ip_html module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function ip_html_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.ip_html':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_theme().
 *
 * Lets us define our paragraphs templates in this module.
 */
function ip_html_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__ip_html' => [
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements hook_field_WIDGET_TYPE_paragraphs_form_alter().
 *
 * Adds "Content Tips from idfive" helper text to the paragraph.
 */
function ip_html_field_widget_paragraphs_form_alter(&$element, &$form_state, $context) {
  if ($element['#paragraph_type'] == 'ip_html') {

    // Tips text from idfive.
    $markup = '<h3>Do:</h3><ul>';
    $markup .= '<li><strong>Make use of headings to organize content.</strong> If a page has a clear hierarchy of content, use different heading styles to indicate importance. For example, a news story can be broken up by using an H2 for large sections, and then H3/H4 headings for details within each section.</li>';
    $markup .= '<li><strong>Copy and paste text without formatting.</strong> All copy on the site should use the website font styling, and should not be modified in any way besides using bold text, underlining or italics. Pasting in text with formatting from another website or a Word doc can carry over colors, type sizes and styles that you don’t want.</li>';
    $markup .= '<li><strong>Optimize images before embedding them.</strong> Large images slow down sites, which does not make your users happy. Save your image to the recommended pixel dimensions and file size before uploading.</li>';
    $markup .= '<li><strong>Consider adding media via other widgets.</strong> Media is better displayed via other widgets sometimes.</li>';
    $markup .= '<li><strong>Include captions with images.</strong> Users read captions, sometimes before they even read the body copy. Captions are also great for accessibility because it can be read by screen readers and provides context.</li>';
    $markup .= '</ul>';
    $markup .= '<h3>Dont:</h3><ul>';
    $markup .= '<li><strong>Overuse images.</strong> Images and video/etc are better served via some of the other widgets.</li>';
    $markup .= '<li><strong>Use headings just for styling purposes.</strong> Headings are meant to help organize content for readers, which is especially important for the visually impaired who may use screen readers. Don’t use a heading just because it has a size, color, or style that looks nice. This may confuse readers.</li>';
    $markup .= '<li><strong>Use headings that take up an entire paragraph of text.</strong> Headings are meant to be a summary of what you’re going to read. Using a heading for long chunks of text dilutes your message.</li>';
    $markup .= '<li><strong>Copy and paste directly from Word or another website.</strong> This can carry over colors, type sizes and styles that you don’t want.</li>';
    $markup .= '</ul>';
    $markup .= '<p><a target="_blank" href="/admin/help/ip_html">Text/HTML Module Help</a></p>';
    $element['ip_html_tips'] = [
      '#type' => 'details',
      '#title' => t('Text/HTML Content Tips'),
      '#weight' => -1000,
    ];
    $element['ip_html_tips']['#markup'] = $markup;

  }
}
