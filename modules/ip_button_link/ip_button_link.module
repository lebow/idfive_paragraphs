<?php

/**
 * @file
 * Ip_button_link module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function ip_button_link_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.ip_button_link':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * This sets classes needed for the button/link type.
 */
function ip_button_link_preprocess_paragraph__ip_button_link(&$variables) {
  // Set classes for link type.
  $type = $variables['elements']['#paragraph']->field_ip_bl_type->value;
  $variables['ip_bl_type'] = $type;
}

/**
 * Implements hook_theme().
 *
 * Lets us define our paragraphs templates in this module.
 */
function ip_button_link_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__ip_button_link' => [
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements hook_field_WIDGET_TYPE_paragraphs_form_alter().
 *
 * Adds "Content Tips from idfive" helper text to the paragraph.
 */
function ip_button_link_field_widget_paragraphs_form_alter(&$element, &$form_state, $context) {
  if ($element['#paragraph_type'] == 'ip_button_link') {

    // Tips text from idfive.
    $markup = '<h3>Do:</h3><ul>';
    $markup .= '<li><strong>Use 1-3 buttons at a time.</strong> This will avoid overwhelming a user with buttons, and will help to narrow down choices.</li>';
    $markup .= '<li><strong>Keep text length reasonable.</strong> Try to keep button/link text to 1-3 words. Overly long buttons can look awkward. If a button has long text, try pairing the button with a heading to break it up.</li>';
    $markup .= '<li><strong>Use meaningful language that tells users what to expect.</strong> Make sure the user knows where they will go when they click a button. Avoid generic language such as “More,” “Click Here,” or “Submit.”</li>';
    $markup .= '</ul>';
    $markup .= '<h3>Dont:</h3><ul>';
    $markup .= '<li><strong>Use the "link target" option without good reason.</strong> Opening links in new windows automatically is against WCAG 2.0 AAA. There is a strong movement towards letting users decide for themselves to open in a new window or not.</li>';
    $markup .= '<li><strong>Overuse buttons.</strong> Prioritize the actions you want your users to take. Avoid using a row of over 3 buttons, as well as “sprinkling” too many buttons throughout a page.</li>';
    $markup .= '</ul>';
    $markup .= '<p><a target="_blank" href="/admin/help/ip_button_link">Button/Link Module Help</a></p>';
    $element['ip_button_link_tips'] = [
      '#type' => 'details',
      '#title' => t('Button/Link Content Tips'),
      '#weight' => -1000,
    ];
    $element['ip_button_link_tips']['#markup'] = $markup;

  }
}
